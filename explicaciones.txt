-----------------------------------------------JS---------------------------------------------------------------
Variables: Son un lugar donde nosotros podemos almacenar diferentes valor o tipos de datos. Estas se dividen en :
let, const, var.
Un string es un tipo de dato que va entre " " y es un dato de tipo texto.
La Funciones tienen como proposito devolver algo, algo que tiene que ser resuelto con la logica del cÃ³digo. Estas contienen parametros y en ellas podemos usar cualquier tipo de dato, metodo, etc.
Existen las funciones comunes : function suma(a,b){return a + b}.
                      Arrow: suma =>(a+b){a + b}.
Tambien tenemos delcaraciones como lo es el if. Este es un condicionante, en el cual nosotros le damos diferentes situaciones y si estas cumplen nos retornan o hacen algo y sino, nos llevan a un else if o a un else.
Los if se declaran asi: if(condition){result} --> si la condicion es false nos pasaria a un else if(condition){result} y si este es falso, nos puede llegar a pasar a otro else if o a un cierre, que es llamada else{resultado}.
Ahora, en los if podemos usar los valores booleanos, los cuales son true o false. Estos van de la mano de los && - || - NOT!.

Arrays: Estas son matrices, las cuales pueden almacenar cualquier tipo de dato, hasta otros arrays.
Nosotros podemos navegar y devolver los diferentes datos que tenga la matriz con este codigo --> array[0] (primer pocision del array).

switch: este es otro "conditional statement", cumple casi la misma funcion que los if, en este se presentan casos (case:) los cuales si son verdad (true) devuelven algo y rompen el codigo (break). Ej:
switch(element){
    case valor1:
    declaracion ejecutada cuando el resultado coincide con el valor1 ;
    break;
    case valor2:
    declaracion ejecutada cuando el resultado coincide con el valor2 ;
    break;
    default:
    declaracion ejecutada cuando el resultado no coincide con ningun caso;
    break;
};
El default funciona como el "else" en los if, si ningu case es true, devolvemos una solucion ante un resultado no definido.

for:
Los for nos sirven para iterar, son un bucle.
Los podemos usar para muchisimas soluciones sin resolver y nos pueden facilitar mucho el codigo.
En codigo:

for(elementIterator = 0; elementIterator < 10; elementIterator++{
    sentencia
}

El primer paso es donde nosotros declaramos la variable contadora, en su mayoria es "i", en el segundo paso nostros ponemso una condicion, en el ejemplo de arriba i va a iterar hasta que sea menor a 10, una vez que el valor de i llegue a 9 se para la iteracion, en el ultimo paso, delcaramos cada cuanto suma o resta i, si va sumando de a 1 o de a 2, o se resta de a 1 o de a 2.

Este tambien nos sirve para iterar dentro de arrays y de un array de objetos e incluso en objetos con el for in.

El for in nos sirve para recorrer objetos.
En codigo:

for



-----------------------------------------------JS---------------------------------------------------------------